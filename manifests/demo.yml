kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-deploy-role
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments", "replicasets", "pods", "services"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aws-deploy-manager
subjects:
- kind: Group
  name: system:serviceaccounts
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: aws-deploy-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: spinnaker-demo-config
  namespace: spinnaker
data:
  NEW_FEATURE: "true"

---


apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: spinnaker-demo
#  namespace: spinnaker
  labels:
    source: demo
    stack: frontend
    app: spinnaker
spec:
  replicas: 3
  selector:
    matchLabels:
      source: demo
      app: spinnaker
  template:
    metadata:
      labels:
        source: demo
        app: spinnaker
    spec:
      containers:
      - name: primary
        image: index.docker.io/dylandocker31/spin-kub-v2-demo
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /
            port: 8000
        envFrom:
        - configMapRef:
            name: spinnaker-demo-config

---


kind: Service
apiVersion: v1
metadata:
  name: spinnaker-demo
#  namespace: spinnaker
spec:
  selector:
    source: demo
    app: spinnaker
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
